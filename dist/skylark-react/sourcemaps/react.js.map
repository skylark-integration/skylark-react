{"version":3,"sources":["react.js"],"names":["define","skylark","hasSymbol","Symbol","for","REACT_ELEMENT_TYPE","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_CONTEXT_TYPE","REACT_ASYNC_MODE_TYPE","REACT_FORWARD_REF_TYPE","REACT_PLACEHOLDER_TYPE","MAYBE_ITERATOR_SYMBOL","iterator","FAUX_ITERATOR_SYMBOL","getIteratorFn","maybeIterable","maybeIterator","enableSchedulerTracing","getOwnPropertySymbols","Object","hasOwnProperty","prototype","propIsEnumerable","propertyIsEnumerable","objectAssign","assign","test1","String","getOwnPropertyNames","test2","i","fromCharCode","map","n","join","test3","split","forEach","letter","keys","err","shouldUseNative","target","source","from","symbols","to","val","undefined","TypeError","toObject","s","arguments","length","key","call","validateFormat","invariant","condition","format","a","b","c","d","e","f","error","Error","args","argIndex","replace","name","framesToPop","lowPriorityWarning$1","_len2","Array","_key2","_len","_key","message","console","warn","x","apply","concat","warningWithoutStack$1","_args$map","item","g","h","_message","didWarnStateUpdateForUnmountedComponent","warnNoop","publicInstance","callerName","_constructor","constructor","componentName","displayName","warningKey","ReactNoopUpdateQueue","isMounted","enqueueForceUpdate","callback","enqueueReplaceState","completeState","enqueueSetState","partialState","emptyObject","Component","props","context","updater","this","refs","freeze","isReactComponent","setState","forceUpdate","deprecatedAPIs","replaceState","defineDeprecationWarning","methodName","info","defineProperty","get","fnName","ComponentDummy","PureComponent","pureComponentPrototype","isPureReactComponent","DEFERRED_TIMEOUT","firstCallbackNode","isPerformingWork","isHostCallbackScheduled","hasNativePerformanceNow","performance","now","deadlineObject","timeRemaining","remaining","getFrameDeadline","Date","didTimeout","ensureHostCallbackIsScheduled","timesOutAt","cancelCallback","requestCallback","flushWork","flushFirstCallback","node","flushedNode","next","previous","currentTime","getCurrentTime","rAFID","rAFTimeoutID","localDate","localSetTimeout","setTimeout","localClearTimeout","clearTimeout","localRequestAnimationFrame","requestAnimationFrame","localCancelAnimationFrame","cancelAnimationFrame","requestAnimationFrameWithTimeout","timestamp","Performance","window","timeoutID","absoluteTimeout","_schedMock","impl","scheduledCallback","isIdleScheduled","timeoutTime","isAnimationFrameScheduled","isPerformingIdleWork","frameDeadline","previousFrameTime","activeFrameTime","messageKey","Math","random","toString","slice","addEventListener","event","data","animationTick","rafTime","nextFrameTime","postMessage","DEFAULT_THREAD_ID","interactionIDCounter","threadIDCounter","interactionsRef","subscriberRef","current","Set","subscribers","onInteractionTraced","interaction","didCatchError","caughtError","subscriber","onInteractionScheduledWorkCompleted","onWorkScheduled","interactions","threadID","onWorkStarted","onWorkStopped","onWorkCanceled","ReactCurrentOwner","currentDispatcher","BEFORE_SLASH_RE","Resolved","getComponentName","type","tag","$$typeof","renderFn","render","functionName","then","resolvedThenable","thenable","_reactStatus","_reactResult","refineResolvedThenable","ReactDebugCurrentFrame","currentlyValidatingElement","setCurrentlyValidatingElement","element","getCurrentStack","getStackAddendum","stack","owner","_owner","ownerName","sourceInfo","path","fileName","test","match","pathBeforeSlash","lineNumber","describeComponentFrame","_source","ReactSharedInternals","Schedule","unstable_cancelScheduledWork","callbackNode","unstable_now","unstable_scheduleWork","options","newNode","timeout","ScheduleTracing","__interactionsRef","__subscriberRef","unstable_clear","prevInteractions","unstable_getCurrent","unstable_getThreadID","unstable_subscribe","add","size","unstable_trace","__count","id","returnValue","unstable_unsubscribe","delete","unstable_wrap","wrappedInteractions","hasRun","wrapped","cancel","ReactComponentTreeHook","warning$1","hasOwnProperty$1","RESERVED_PROPS","ref","__self","__source","specialPropKeyWarningShown","specialPropRefWarningShown","hasValidRef","config","getter","getOwnPropertyDescriptor","isReactWarning","hasValidKey","ReactElement","self","_store","configurable","enumerable","writable","value","createElement","children","propName","childrenLength","childArray","defaultProps","warnAboutAccessingKey","defineKeyPropWarningGetter","warnAboutAccessingRef","defineRefPropWarningGetter","isValidElement","object","SEPARATOR","SUBSEPARATOR","didWarnAboutMaps","userProvidedKeyEscapeRegex","escapeUserProvidedKey","text","POOL_SIZE","traverseContextPool","getPooledTraverseContext","mapResult","keyPrefix","mapFunction","mapContext","traverseContext","pop","result","func","count","releaseTraverseContext","push","traverseAllChildren","traverseAllChildrenImpl","nameSoFar","invokeCallback","getComponentKey","child","subtreeCount","nextNamePrefix","isArray","iteratorFn","entries","step","ii","done","addendum","childrenString","component","index","escaperLookup","=",":","forEachSingleChild","bookKeeping","mapSingleChildIntoContext","childKey","oldElement","newKey","mappedChild","mapIntoWithKeyPrefixInternal","_self","array","prefix","escapedPrefix","printWarning$1","ReactPropTypesSecret","loggedTypeFailures","checkPropTypes_1","typeSpecs","values","location","getStack","typeSpecName","ex","propTypesMisspellWarningShown","getDeclarationErrorAddendum","ownerHasKeyUseWarning","validateExplicitKey","parentType","validated","currentComponentErrorInfo","parentName","getCurrentComponentErrorInfo","childOwner","validateChildKeys","validatePropTypes","propTypes","PropTypes","getDefaultProps","isReactClassApproved","createElementWithValidation","validType","isValidElementType","elementProps","getSourceInfoErrorAddendum","typeString","fragment","validateFragmentProps","React","Children","forEachFunc","forEachContext","toArray","only","createRef","refObject","seal","createContext","defaultValue","calculateChangedBits","_calculateChangedBits","_currentValue","_currentValue2","Provider","Consumer","unstable_read","_context","observedBits","dispatcher","readContext","bind","_currentRenderer","_currentRenderer2","forwardRef","Fragment","StrictMode","unstable_AsyncMode","unstable_Profiler","cloneElement","newElement","createFactory","validatedFactory","version","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","React$2","default","React$3","react"],"mappings":"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","file":"../react.js","sourcesContent":["/** @license React v16.5.2\r\n * react.development.js\r\n *\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\ndefine([\r\n  \"skylark-langx/skylark\"\r\n],function(skylark){\r\n'use strict';\r\n\r\n// TODO: this is special because it gets imported during build.\r\n\r\nvar ReactVersion = '16.5.2';\r\n\r\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\r\n// nor polyfill, then a plain number is used for performance.\r\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\r\n\r\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\r\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\r\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\r\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\r\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\r\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\r\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace;\r\nvar REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\r\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\r\nvar REACT_PLACEHOLDER_TYPE = hasSymbol ? Symbol.for('react.placeholder') : 0xead1;\r\n\r\nvar MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\r\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\r\n\r\nfunction getIteratorFn(maybeIterable) {\r\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\r\n    return null;\r\n  }\r\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\r\n  if (typeof maybeIterator === 'function') {\r\n    return maybeIterator;\r\n  }\r\n  return null;\r\n}\r\n\r\n// Exports ReactDOM.createRoot\r\n\r\n\r\n// Experimental error-boundary API that can recover from errors within a single\r\n// render phase\r\n\r\n// Suspense\r\nvar enableSuspense = false;\r\n// Helps identify side effects in begin-phase lifecycle hooks and setState reducers:\r\n\r\n\r\n// In some cases, StrictMode should also double-render lifecycles.\r\n// This can be confusing for tests though,\r\n// And it can be bad for performance in production.\r\n// This feature flag can be used to control the behavior:\r\n\r\n\r\n// To preserve the \"Pause on caught exceptions\" behavior of the debugger, we\r\n// replay the begin phase of a failed component inside invokeGuardedCallback.\r\n\r\n\r\n// Warn about deprecated, async-unsafe lifecycles; relates to RFC #6:\r\n\r\n\r\n// Warn about legacy context API\r\n\r\n\r\n// Gather advanced timing metrics for Profiler subtrees.\r\n\r\n\r\n// Trace which interactions trigger each commit.\r\nvar enableSchedulerTracing = true;\r\n\r\n// Only used in www builds.\r\n\r\n\r\n// Only used in www builds.\r\n\r\n\r\n// React Fire: prevent the value and checked attributes from syncing\r\n// with their related DOM properties\r\n\r\n/*\r\nobject-assign\r\n(c) Sindre Sorhus\r\n@license MIT\r\n*/\r\n\r\n\r\n/* eslint-disable no-unused-vars */\r\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\r\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\r\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\r\n\r\nfunction toObject(val) {\r\n\tif (val === null || val === undefined) {\r\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\r\n\t}\r\n\r\n\treturn Object(val);\r\n}\r\n\r\nfunction shouldUseNative() {\r\n\ttry {\r\n\t\tif (!Object.assign) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// Detect buggy property enumeration order in older V8 versions.\r\n\r\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\r\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\r\n\t\ttest1[5] = 'de';\r\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\r\n\t\tvar test2 = {};\r\n\t\tfor (var i = 0; i < 10; i++) {\r\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\r\n\t\t}\r\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\r\n\t\t\treturn test2[n];\r\n\t\t});\r\n\t\tif (order2.join('') !== '0123456789') {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\r\n\t\tvar test3 = {};\r\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\r\n\t\t\ttest3[letter] = letter;\r\n\t\t});\r\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\r\n\t\t\t\t'abcdefghijklmnopqrst') {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t} catch (err) {\r\n\t\t// We don't expect any of the above to throw, but better to be safe.\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nvar objectAssign = shouldUseNative() ? Object.assign : function (target, source) {\r\n\tvar from;\r\n\tvar to = toObject(target);\r\n\tvar symbols;\r\n\r\n\tfor (var s = 1; s < arguments.length; s++) {\r\n\t\tfrom = Object(arguments[s]);\r\n\r\n\t\tfor (var key in from) {\r\n\t\t\tif (hasOwnProperty.call(from, key)) {\r\n\t\t\t\tto[key] = from[key];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (getOwnPropertySymbols) {\r\n\t\t\tsymbols = getOwnPropertySymbols(from);\r\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\r\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\r\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn to;\r\n};\r\n\r\n/**\r\n * Use invariant() to assert state which your program assumes to be true.\r\n *\r\n * Provide sprintf-style format (only %s is supported) and arguments\r\n * to provide information about what broke and what you were\r\n * expecting.\r\n *\r\n * The invariant message will be stripped in production, but the invariant\r\n   * will remain to ensure logic does not differ in production.\r\n   */\r\n\r\n  var validateFormat = function () {};\r\n\r\n  {\r\n    validateFormat = function (format) {\r\n      if (format === undefined) {\r\n        throw new Error('invariant requires an error message argument');\r\n      }\r\n    };\r\n  }\r\n\r\n  function invariant(condition, format, a, b, c, d, e, f) {\r\n    validateFormat(format);\r\n\r\n    if (!condition) {\r\n      var error = void 0;\r\n      if (format === undefined) {\r\n        error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\r\n      } else {\r\n        var args = [a, b, c, d, e, f];\r\n        var argIndex = 0;\r\n        error = new Error(format.replace(/%s/g, function () {\r\n          return args[argIndex++];\r\n        }));\r\n        error.name = 'Invariant Violation';\r\n      }\r\n\r\n      error.framesToPop = 1; // we don't care about invariant's own frame\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // Relying on the `invariant()` implementation lets us\r\n  // preserve the format and params in the www builds.\r\n\r\n  /**\r\n   * Forked from fbjs/warning:\r\n   * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js\r\n   *\r\n   * Only change is we use console.warn instead of console.error,\r\n   * and do nothing when 'console' is not supported.\r\n   * This really simplifies the code.\r\n   * ---\r\n   * Similar to invariant but only logs a warning if the condition is not met.\r\n   * This can be used to log issues in development environments in critical\r\n   * paths. Removing the logging code for production environments will keep the\r\n   * same logic and follow the same code paths.\r\n   */\r\n\r\n  var lowPriorityWarning = function () {};\r\n\r\n  {\r\n    var printWarning = function (format) {\r\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\r\n        args[_key - 1] = arguments[_key];\r\n      }\r\n\r\n      var argIndex = 0;\r\n      var message = 'Warning: ' + format.replace(/%s/g, function () {\r\n        return args[argIndex++];\r\n      });\r\n      if (typeof console !== 'undefined') {\r\n        console.warn(message);\r\n      }\r\n      try {\r\n        // --- Welcome to debugging React ---\r\n        // This error was thrown as a convenience so that you can use this stack\r\n        // to find the callsite that caused this warning to fire.\r\n        throw new Error(message);\r\n      } catch (x) {}\r\n    };\r\n\r\n    lowPriorityWarning = function (condition, format) {\r\n      if (format === undefined) {\r\n        throw new Error('`lowPriorityWarning(condition, format, ...args)` requires a warning ' + 'message argument');\r\n      }\r\n      if (!condition) {\r\n        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\r\n          args[_key2 - 2] = arguments[_key2];\r\n        }\r\n\r\n        printWarning.apply(undefined, [format].concat(args));\r\n      }\r\n    };\r\n  }\r\n\r\n  var lowPriorityWarning$1 = lowPriorityWarning;\r\n\r\n  /**\r\n   * Similar to invariant but only logs a warning if the condition is not met.\r\n   * This can be used to log issues in development environments in critical\r\n   * paths. Removing the logging code for production environments will keep the\r\n   * same logic and follow the same code paths.\r\n   */\r\n\r\n  var warningWithoutStack = function () {};\r\n\r\n  {\r\n    warningWithoutStack = function (condition, format) {\r\n      for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\r\n        args[_key - 2] = arguments[_key];\r\n      }\r\n\r\n      if (format === undefined) {\r\n        throw new Error('`warningWithoutStack(condition, format, ...args)` requires a warning ' + 'message argument');\r\n      }\r\n      if (args.length > 8) {\r\n        // Check before the condition to catch violations early.\r\n        throw new Error('warningWithoutStack() currently supports at most 8 arguments.');\r\n      }\r\n      if (condition) {\r\n        return;\r\n      }\r\n      if (typeof console !== 'undefined') {\r\n        var _args$map = args.map(function (item) {\r\n          return '' + item;\r\n        }),\r\n            a = _args$map[0],\r\n            b = _args$map[1],\r\n            c = _args$map[2],\r\n            d = _args$map[3],\r\n            e = _args$map[4],\r\n            f = _args$map[5],\r\n            g = _args$map[6],\r\n            h = _args$map[7];\r\n\r\n        var message = 'Warning: ' + format;\r\n\r\n        // We intentionally don't use spread (or .apply) because it breaks IE9:\r\n        // https://github.com/facebook/react/issues/13610\r\n        switch (args.length) {\r\n          case 0:\r\n            console.error(message);\r\n            break;\r\n          case 1:\r\n            console.error(message, a);\r\n            break;\r\n          case 2:\r\n            console.error(message, a, b);\r\n            break;\r\n          case 3:\r\n            console.error(message, a, b, c);\r\n            break;\r\n          case 4:\r\n            console.error(message, a, b, c, d);\r\n            break;\r\n          case 5:\r\n            console.error(message, a, b, c, d, e);\r\n            break;\r\n          case 6:\r\n            console.error(message, a, b, c, d, e, f);\r\n            break;\r\n          case 7:\r\n            console.error(message, a, b, c, d, e, f, g);\r\n            break;\r\n          case 8:\r\n            console.error(message, a, b, c, d, e, f, g, h);\r\n            break;\r\n          default:\r\n            throw new Error('warningWithoutStack() currently supports at most 8 arguments.');\r\n        }\r\n      }\r\n      try {\r\n        // --- Welcome to debugging React ---\r\n        // This error was thrown as a convenience so that you can use this stack\r\n        // to find the callsite that caused this warning to fire.\r\n        var argIndex = 0;\r\n        var _message = 'Warning: ' + format.replace(/%s/g, function () {\r\n          return args[argIndex++];\r\n        });\r\n        throw new Error(_message);\r\n      } catch (x) {}\r\n    };\r\n  }\r\n\r\n  var warningWithoutStack$1 = warningWithoutStack;\r\n\r\n  var didWarnStateUpdateForUnmountedComponent = {};\r\n\r\n  function warnNoop(publicInstance, callerName) {\r\n    {\r\n      var _constructor = publicInstance.constructor;\r\n      var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';\r\n      var warningKey = componentName + '.' + callerName;\r\n      if (didWarnStateUpdateForUnmountedComponent[warningKey]) {\r\n        return;\r\n      }\r\n      warningWithoutStack$1(false, \"Can't call %s on a component that is not yet mounted. \" + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);\r\n      didWarnStateUpdateForUnmountedComponent[warningKey] = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This is the abstract API for an update queue.\r\n   */\r\n  var ReactNoopUpdateQueue = {\r\n    /**\r\n     * Checks whether or not this composite component is mounted.\r\n     * @param {ReactClass} publicInstance The instance we want to test.\r\n     * @return {boolean} True if mounted, false otherwise.\r\n     * @protected\r\n     * @final\r\n     */\r\n    isMounted: function (publicInstance) {\r\n      return false;\r\n    },\r\n\r\n    /**\r\n     * Forces an update. This should only be invoked when it is known with\r\n     * certainty that we are **not** in a DOM transaction.\r\n     *\r\n     * You may want to call this when you know that some deeper aspect of the\r\n     * component's state has changed but `setState` was not called.\r\n     *\r\n     * This will not invoke `shouldComponentUpdate`, but it will invoke\r\n     * `componentWillUpdate` and `componentDidUpdate`.\r\n     *\r\n     * @param {ReactClass} publicInstance The instance that should rerender.\r\n     * @param {?function} callback Called after component is updated.\r\n     * @param {?string} callerName name of the calling function in the public API.\r\n     * @internal\r\n     */\r\n    enqueueForceUpdate: function (publicInstance, callback, callerName) {\r\n      warnNoop(publicInstance, 'forceUpdate');\r\n    },\r\n\r\n    /**\r\n     * Replaces all of the state. Always use this or `setState` to mutate state.\r\n     * You should treat `this.state` as immutable.\r\n     *\r\n     * There is no guarantee that `this.state` will be immediately updated, so\r\n     * accessing `this.state` after calling this method may return the old value.\r\n     *\r\n     * @param {ReactClass} publicInstance The instance that should rerender.\r\n     * @param {object} completeState Next state.\r\n     * @param {?function} callback Called after component is updated.\r\n     * @param {?string} callerName name of the calling function in the public API.\r\n     * @internal\r\n     */\r\n    enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {\r\n      warnNoop(publicInstance, 'replaceState');\r\n    },\r\n\r\n    /**\r\n     * Sets a subset of the state. This only exists because _pendingState is\r\n     * internal. This provides a merging strategy that is not available to deep\r\n     * properties which is confusing. TODO: Expose pendingState or don't use it\r\n     * during the merge.\r\n     *\r\n     * @param {ReactClass} publicInstance The instance that should rerender.\r\n     * @param {object} partialState Next partial state to be merged with state.\r\n     * @param {?function} callback Called after component is updated.\r\n     * @param {?string} Name of the calling function in the public API.\r\n     * @internal\r\n     */\r\n    enqueueSetState: function (publicInstance, partialState, callback, callerName) {\r\n      warnNoop(publicInstance, 'setState');\r\n    }\r\n  };\r\n\r\n  var emptyObject = {};\r\n  {\r\n    Object.freeze(emptyObject);\r\n  }\r\n\r\n  /**\r\n   * Base class helpers for the updating state of a component.\r\n   */\r\n  function Component(props, context, updater) {\r\n    this.props = props;\r\n    this.context = context;\r\n    // If a component has string refs, we will assign a different object later.\r\n    this.refs = emptyObject;\r\n    // We initialize the default updater but the real one gets injected by the\r\n    // renderer.\r\n    this.updater = updater || ReactNoopUpdateQueue;\r\n  }\r\n\r\n  Component.prototype.isReactComponent = {};\r\n\r\n  /**\r\n   * Sets a subset of the state. Always use this to mutate\r\n   * state. You should treat `this.state` as immutable.\r\n   *\r\n   * There is no guarantee that `this.state` will be immediately updated, so\r\n   * accessing `this.state` after calling this method may return the old value.\r\n   *\r\n   * There is no guarantee that calls to `setState` will run synchronously,\r\n   * as they may eventually be batched together.  You can provide an optional\r\n   * callback that will be executed when the call to setState is actually\r\n   * completed.\r\n   *\r\n   * When a function is provided to setState, it will be called at some point in\r\n   * the future (not synchronously). It will be called with the up to date\r\n   * component arguments (state, props, context). These values can be different\r\n   * from this.* because your function may be called after receiveProps but before\r\n   * shouldComponentUpdate, and this new state, props, and context will not yet be\r\n   * assigned to this.\r\n   *\r\n   * @param {object|function} partialState Next partial state or function to\r\n   *        produce next partial state to be merged with current state.\r\n   * @param {?function} callback Called after state is updated.\r\n   * @final\r\n   * @protected\r\n   */\r\n  Component.prototype.setState = function (partialState, callback) {\r\n    !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : void 0;\r\n    this.updater.enqueueSetState(this, partialState, callback, 'setState');\r\n  };\r\n\r\n  /**\r\n   * Forces an update. This should only be invoked when it is known with\r\n   * certainty that we are **not** in a DOM transaction.\r\n   *\r\n   * You may want to call this when you know that some deeper aspect of the\r\n   * component's state has changed but `setState` was not called.\r\n   *\r\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\r\n   * `componentWillUpdate` and `componentDidUpdate`.\r\n   *\r\n   * @param {?function} callback Called after update is complete.\r\n   * @final\r\n   * @protected\r\n   */\r\n  Component.prototype.forceUpdate = function (callback) {\r\n    this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');\r\n  };\r\n\r\n  /**\r\n   * Deprecated APIs. These APIs used to exist on classic React classes but since\r\n   * we would like to deprecate them, we're not going to move them over to this\r\n   * modern base class. Instead, we define a getter that warns if it's accessed.\r\n   */\r\n  {\r\n    var deprecatedAPIs = {\r\n      isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],\r\n      replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']\r\n    };\r\n    var defineDeprecationWarning = function (methodName, info) {\r\n      Object.defineProperty(Component.prototype, methodName, {\r\n        get: function () {\r\n          lowPriorityWarning$1(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);\r\n          return undefined;\r\n        }\r\n      });\r\n    };\r\n    for (var fnName in deprecatedAPIs) {\r\n      if (deprecatedAPIs.hasOwnProperty(fnName)) {\r\n        defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\r\n      }\r\n    }\r\n  }\r\n\r\n  function ComponentDummy() {}\r\n  ComponentDummy.prototype = Component.prototype;\r\n\r\n  /**\r\n   * Convenience component with default shallow equality check for sCU.\r\n   */\r\n  function PureComponent(props, context, updater) {\r\n    this.props = props;\r\n    this.context = context;\r\n    // If a component has string refs, we will assign a different object later.\r\n    this.refs = emptyObject;\r\n    this.updater = updater || ReactNoopUpdateQueue;\r\n  }\r\n\r\n  var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();\r\n  pureComponentPrototype.constructor = PureComponent;\r\n  // Avoid an extra prototype jump for these methods.\r\n  objectAssign(pureComponentPrototype, Component.prototype);\r\n  pureComponentPrototype.isPureReactComponent = true;\r\n\r\n  // an immutable object with a single mutable value\r\n  function createRef() {\r\n    var refObject = {\r\n      current: null\r\n    };\r\n    {\r\n      Object.seal(refObject);\r\n    }\r\n    return refObject;\r\n  }\r\n\r\n  /* eslint-disable no-var */\r\n\r\n  // TODO: Currently there's only a single priority level, Deferred. Will add\r\n  // additional priorities.\r\n  var DEFERRED_TIMEOUT = 5000;\r\n\r\n  // Callbacks are stored as a circular, doubly linked list.\r\n  var firstCallbackNode = null;\r\n\r\n  var isPerformingWork = false;\r\n\r\n  var isHostCallbackScheduled = false;\r\n\r\n  var hasNativePerformanceNow = typeof performance === 'object' && typeof performance.now === 'function';\r\n\r\n  var timeRemaining;\r\n  if (hasNativePerformanceNow) {\r\n    timeRemaining = function () {\r\n      // We assume that if we have a performance timer that the rAF callback\r\n      // gets a performance timer value. Not sure if this is always true.\r\n      var remaining = getFrameDeadline() - performance.now();\r\n      return remaining > 0 ? remaining : 0;\r\n    };\r\n  } else {\r\n    timeRemaining = function () {\r\n      // Fallback to Date.now()\r\n      var remaining = getFrameDeadline() - Date.now();\r\n      return remaining > 0 ? remaining : 0;\r\n    };\r\n  }\r\n\r\n  var deadlineObject = {\r\n    timeRemaining: timeRemaining,\r\n    didTimeout: false\r\n  };\r\n\r\n  function ensureHostCallbackIsScheduled() {\r\n    if (isPerformingWork) {\r\n      // Don't schedule work yet; wait until the next time we yield.\r\n      return;\r\n    }\r\n    // Schedule the host callback using the earliest timeout in the list.\r\n    var timesOutAt = firstCallbackNode.timesOutAt;\r\n    if (!isHostCallbackScheduled) {\r\n      isHostCallbackScheduled = true;\r\n    } else {\r\n      // Cancel the existing host callback.\r\n      cancelCallback();\r\n    }\r\n    requestCallback(flushWork, timesOutAt);\r\n  }\r\n\r\n  function flushFirstCallback(node) {\r\n    var flushedNode = firstCallbackNode;\r\n\r\n    // Remove the node from the list before calling the callback. That way the\r\n    // list is in a consistent state even if the callback throws.\r\n    var next = firstCallbackNode.next;\r\n    if (firstCallbackNode === next) {\r\n      // This is the last callback in the list.\r\n      firstCallbackNode = null;\r\n      next = null;\r\n    } else {\r\n      var previous = firstCallbackNode.previous;\r\n      firstCallbackNode = previous.next = next;\r\n      next.previous = previous;\r\n    }\r\n\r\n    flushedNode.next = flushedNode.previous = null;\r\n\r\n    // Now it's safe to call the callback.\r\n    var callback = flushedNode.callback;\r\n    callback(deadlineObject);\r\n  }\r\n\r\n  function flushWork(didTimeout) {\r\n    isPerformingWork = true;\r\n    deadlineObject.didTimeout = didTimeout;\r\n    try {\r\n      if (didTimeout) {\r\n        // Flush all the timed out callbacks without yielding.\r\n        while (firstCallbackNode !== null) {\r\n          // Read the current time. Flush all the callbacks that expire at or\r\n          // earlier than that time. Then read the current time again and repeat.\r\n          // This optimizes for as few performance.now calls as possible.\r\n          var currentTime = getCurrentTime();\r\n          if (firstCallbackNode.timesOutAt <= currentTime) {\r\n            do {\r\n              flushFirstCallback();\r\n            } while (firstCallbackNode !== null && firstCallbackNode.timesOutAt <= currentTime);\r\n            continue;\r\n          }\r\n          break;\r\n        }\r\n      } else {\r\n        // Keep flushing callbacks until we run out of time in the frame.\r\n        if (firstCallbackNode !== null) {\r\n          do {\r\n            flushFirstCallback();\r\n          } while (firstCallbackNode !== null && getFrameDeadline() - getCurrentTime() > 0);\r\n        }\r\n      }\r\n    } finally {\r\n      isPerformingWork = false;\r\n      if (firstCallbackNode !== null) {\r\n        // There's still work remaining. Request another callback.\r\n        ensureHostCallbackIsScheduled(firstCallbackNode);\r\n      } else {\r\n        isHostCallbackScheduled = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  function unstable_scheduleWork(callback, options) {\r\n    var currentTime = getCurrentTime();\r\n\r\n    var timesOutAt;\r\n    if (options !== undefined && options !== null && options.timeout !== null && options.timeout !== undefined) {\r\n      // Check for an explicit timeout\r\n      timesOutAt = currentTime + options.timeout;\r\n    } else {\r\n      // Compute an absolute timeout using the default constant.\r\n      timesOutAt = currentTime + DEFERRED_TIMEOUT;\r\n    }\r\n\r\n    var newNode = {\r\n      callback: callback,\r\n      timesOutAt: timesOutAt,\r\n      next: null,\r\n      previous: null\r\n    };\r\n\r\n    // Insert the new callback into the list, sorted by its timeout.\r\n    if (firstCallbackNode === null) {\r\n      // This is the first callback in the list.\r\n      firstCallbackNode = newNode.next = newNode.previous = newNode;\r\n      ensureHostCallbackIsScheduled(firstCallbackNode);\r\n    } else {\r\n      var next = null;\r\n      var node = firstCallbackNode;\r\n      do {\r\n        if (node.timesOutAt > timesOutAt) {\r\n          // The new callback times out before this one.\r\n          next = node;\r\n          break;\r\n        }\r\n        node = node.next;\r\n      } while (node !== firstCallbackNode);\r\n\r\n      if (next === null) {\r\n        // No callback with a later timeout was found, which means the new\r\n        // callback has the latest timeout in the list.\r\n        next = firstCallbackNode;\r\n      } else if (next === firstCallbackNode) {\r\n        // The new callback has the earliest timeout in the entire list.\r\n        firstCallbackNode = newNode;\r\n        ensureHostCallbackIsScheduled(firstCallbackNode);\r\n      }\r\n\r\n      var previous = next.previous;\r\n      previous.next = next.previous = newNode;\r\n      newNode.next = next;\r\n      newNode.previous = previous;\r\n    }\r\n\r\n    return newNode;\r\n  }\r\n\r\n  function unstable_cancelScheduledWork(callbackNode) {\r\n    var next = callbackNode.next;\r\n    if (next === null) {\r\n      // Already cancelled.\r\n      return;\r\n    }\r\n\r\n    if (next === callbackNode) {\r\n      // This is the only scheduled callback. Clear the list.\r\n      firstCallbackNode = null;\r\n    } else {\r\n      // Remove the callback from its position in the list.\r\n      if (callbackNode === firstCallbackNode) {\r\n        firstCallbackNode = next;\r\n      }\r\n      var previous = callbackNode.previous;\r\n      previous.next = next;\r\n      next.previous = previous;\r\n    }\r\n\r\n    callbackNode.next = callbackNode.previous = null;\r\n  }\r\n\r\n  // The remaining code is essentially a polyfill for requestIdleCallback. It\r\n  // works by scheduling a requestAnimationFrame, storing the time for the start\r\n  // of the frame, then scheduling a postMessage which gets scheduled after paint.\r\n  // Within the postMessage handler do as much work as possible until time + frame\r\n  // rate. By separating the idle call into a separate event tick we ensure that\r\n  // layout, paint and other browser work is counted against the available time.\r\n  // The frame rate is dynamically adjusted.\r\n\r\n  // We capture a local reference to any global, in case it gets polyfilled after\r\n  // this module is initially evaluated. We want to be using a\r\n  // consistent implementation.\r\n  var localDate = Date;\r\n\r\n  // This initialization code may run even on server environments if a component\r\n  // just imports ReactDOM (e.g. for findDOMNode). Some environments might not\r\n  // have setTimeout or clearTimeout. However, we always expect them to be defined\r\n  // on the client. https://github.com/facebook/react/pull/13088\r\n  var localSetTimeout = typeof setTimeout === 'function' ? setTimeout : undefined;\r\n  var localClearTimeout = typeof clearTimeout === 'function' ? clearTimeout : undefined;\r\n\r\n  // We don't expect either of these to necessarily be defined, but we will error\r\n  // later if they are missing on the client.\r\n  var localRequestAnimationFrame = typeof requestAnimationFrame === 'function' ? requestAnimationFrame : undefined;\r\n  var localCancelAnimationFrame = typeof cancelAnimationFrame === 'function' ? cancelAnimationFrame : undefined;\r\n\r\n  var getCurrentTime;\r\n\r\n  // requestAnimationFrame does not run when the tab is in the background. If\r\n  // we're backgrounded we prefer for that work to happen so that the page\r\n  // continues to load in the background. So we also schedule a 'setTimeout' as\r\n  // a fallback.\r\n  // TODO: Need a better heuristic for backgrounded work.\r\n  var ANIMATION_FRAME_TIMEOUT = 100;\r\n  var rAFID;\r\n  var rAFTimeoutID;\r\n  var requestAnimationFrameWithTimeout = function (callback) {\r\n    // schedule rAF and also a setTimeout\r\n    rAFID = localRequestAnimationFrame(function (timestamp) {\r\n      // cancel the setTimeout\r\n      localClearTimeout(rAFTimeoutID);\r\n      callback(timestamp);\r\n    });\r\n    rAFTimeoutID = localSetTimeout(function () {\r\n      // cancel the requestAnimationFrame\r\n      localCancelAnimationFrame(rAFID);\r\n      callback(getCurrentTime());\r\n    }, ANIMATION_FRAME_TIMEOUT);\r\n  };\r\n\r\n  if (hasNativePerformanceNow) {\r\n    var Performance = performance;\r\n    getCurrentTime = function () {\r\n      return Performance.now();\r\n    };\r\n  } else {\r\n    getCurrentTime = function () {\r\n      return localDate.now();\r\n    };\r\n  }\r\n\r\n  var requestCallback;\r\n  var cancelCallback;\r\n  var getFrameDeadline;\r\n\r\n  if (typeof window === 'undefined') {\r\n    // If this accidentally gets imported in a non-browser environment, fallback\r\n    // to a naive implementation.\r\n    var timeoutID = -1;\r\n    requestCallback = function (callback, absoluteTimeout) {\r\n      timeoutID = setTimeout(callback, 0, true);\r\n    };\r\n    cancelCallback = function () {\r\n      clearTimeout(timeoutID);\r\n    };\r\n    getFrameDeadline = function () {\r\n      return 0;\r\n    };\r\n  } else if (window._schedMock) {\r\n    // Dynamic injection, only for testing purposes.\r\n    var impl = window._schedMock;\r\n    requestCallback = impl[0];\r\n    cancelCallback = impl[1];\r\n    getFrameDeadline = impl[2];\r\n  } else {\r\n    if (typeof console !== 'undefined') {\r\n      if (typeof localRequestAnimationFrame !== 'function') {\r\n        console.error(\"This browser doesn't support requestAnimationFrame. \" + 'Make sure that you load a ' + 'polyfill in older browsers. https://fb.me/react-polyfills');\r\n      }\r\n      if (typeof localCancelAnimationFrame !== 'function') {\r\n        console.error(\"This browser doesn't support cancelAnimationFrame. \" + 'Make sure that you load a ' + 'polyfill in older browsers. https://fb.me/react-polyfills');\r\n      }\r\n    }\r\n\r\n    var scheduledCallback = null;\r\n    var isIdleScheduled = false;\r\n    var timeoutTime = -1;\r\n\r\n    var isAnimationFrameScheduled = false;\r\n\r\n    var isPerformingIdleWork = false;\r\n\r\n    var frameDeadline = 0;\r\n    // We start out assuming that we run at 30fps but then the heuristic tracking\r\n    // will adjust this value to a faster fps if we get more frequent animation\r\n    // frames.\r\n    var previousFrameTime = 33;\r\n    var activeFrameTime = 33;\r\n\r\n    getFrameDeadline = function () {\r\n      return frameDeadline;\r\n    };\r\n\r\n    // We use the postMessage trick to defer idle work until after the repaint.\r\n    var messageKey = '__reactIdleCallback$' + Math.random().toString(36).slice(2);\r\n    var idleTick = function (event) {\r\n      if (event.source !== window || event.data !== messageKey) {\r\n        return;\r\n      }\r\n\r\n      isIdleScheduled = false;\r\n\r\n      var currentTime = getCurrentTime();\r\n\r\n      var didTimeout = false;\r\n      if (frameDeadline - currentTime <= 0) {\r\n        // There's no time left in this idle period. Check if the callback has\r\n        // a timeout and whether it's been exceeded.\r\n        if (timeoutTime !== -1 && timeoutTime <= currentTime) {\r\n          // Exceeded the timeout. Invoke the callback even though there's no\r\n          // time left.\r\n          didTimeout = true;\r\n        } else {\r\n          // No timeout.\r\n          if (!isAnimationFrameScheduled) {\r\n            // Schedule another animation callback so we retry later.\r\n            isAnimationFrameScheduled = true;\r\n            requestAnimationFrameWithTimeout(animationTick);\r\n          }\r\n          // Exit without invoking the callback.\r\n          return;\r\n        }\r\n      }\r\n\r\n      timeoutTime = -1;\r\n      var callback = scheduledCallback;\r\n      scheduledCallback = null;\r\n      if (callback !== null) {\r\n        isPerformingIdleWork = true;\r\n        try {\r\n          callback(didTimeout);\r\n        } finally {\r\n          isPerformingIdleWork = false;\r\n        }\r\n      }\r\n    };\r\n    // Assumes that we have addEventListener in this environment. Might need\r\n    // something better for old IE.\r\n    window.addEventListener('message', idleTick, false);\r\n\r\n    var animationTick = function (rafTime) {\r\n      isAnimationFrameScheduled = false;\r\n      var nextFrameTime = rafTime - frameDeadline + activeFrameTime;\r\n      if (nextFrameTime < activeFrameTime && previousFrameTime < activeFrameTime) {\r\n        if (nextFrameTime < 8) {\r\n          // Defensive coding. We don't support higher frame rates than 120hz.\r\n          // If we get lower than that, it is probably a bug.\r\n          nextFrameTime = 8;\r\n        }\r\n        // If one frame goes long, then the next one can be short to catch up.\r\n        // If two frames are short in a row, then that's an indication that we\r\n        // actually have a higher frame rate than what we're currently optimizing.\r\n        // We adjust our heuristic dynamically accordingly. For example, if we're\r\n        // running on 120hz display or 90hz VR display.\r\n        // Take the max of the two in case one of them was an anomaly due to\r\n        // missed frame deadlines.\r\n        activeFrameTime = nextFrameTime < previousFrameTime ? previousFrameTime : nextFrameTime;\r\n      } else {\r\n        previousFrameTime = nextFrameTime;\r\n      }\r\n      frameDeadline = rafTime + activeFrameTime;\r\n      if (!isIdleScheduled) {\r\n        isIdleScheduled = true;\r\n        window.postMessage(messageKey, '*');\r\n      }\r\n    };\r\n\r\n    requestCallback = function (callback, absoluteTimeout) {\r\n      scheduledCallback = callback;\r\n      timeoutTime = absoluteTimeout;\r\n      if (isPerformingIdleWork) {\r\n        // If we're already performing idle work, an error must have been thrown.\r\n        // Don't wait for the next frame. Continue working ASAP, in a new event.\r\n        window.postMessage(messageKey, '*');\r\n      } else if (!isAnimationFrameScheduled) {\r\n        // If rAF didn't already schedule one, we need to schedule a frame.\r\n        // TODO: If this rAF doesn't materialize because the browser throttles, we\r\n        // might want to still have setTimeout trigger rIC as a backup to ensure\r\n        // that we keep performing work.\r\n        isAnimationFrameScheduled = true;\r\n        requestAnimationFrameWithTimeout(animationTick);\r\n      }\r\n    };\r\n\r\n    cancelCallback = function () {\r\n      scheduledCallback = null;\r\n      isIdleScheduled = false;\r\n      timeoutTime = -1;\r\n    };\r\n  }\r\n\r\n  var DEFAULT_THREAD_ID = 0;\r\n\r\n  // Counters used to generate unique IDs.\r\n  var interactionIDCounter = 0;\r\n  var threadIDCounter = 0;\r\n\r\n  // Set of currently traced interactions.\r\n  // Interactions \"stack\"–\r\n  // Meaning that newly traced interactions are appended to the previously active set.\r\n  // When an interaction goes out of scope, the previous set (if any) is restored.\r\n  var interactionsRef = null;\r\n\r\n  // Listener(s) to notify when interactions begin and end.\r\n  var subscriberRef = null;\r\n\r\n  if (enableSchedulerTracing) {\r\n    interactionsRef = {\r\n      current: new Set()\r\n    };\r\n    subscriberRef = {\r\n      current: null\r\n    };\r\n  }\r\n\r\n  function unstable_clear(callback) {\r\n    if (!enableSchedulerTracing) {\r\n      return callback();\r\n    }\r\n\r\n    var prevInteractions = interactionsRef.current;\r\n    interactionsRef.current = new Set();\r\n\r\n    try {\r\n      return callback();\r\n    } finally {\r\n      interactionsRef.current = prevInteractions;\r\n    }\r\n  }\r\n\r\n  function unstable_getCurrent() {\r\n    if (!enableSchedulerTracing) {\r\n      return null;\r\n    } else {\r\n      return interactionsRef.current;\r\n    }\r\n  }\r\n\r\n  function unstable_getThreadID() {\r\n    return ++threadIDCounter;\r\n  }\r\n\r\n  function unstable_trace(name, timestamp, callback) {\r\n    var threadID = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : DEFAULT_THREAD_ID;\r\n\r\n    if (!enableSchedulerTracing) {\r\n      return callback();\r\n    }\r\n\r\n    var interaction = {\r\n      __count: 1,\r\n      id: interactionIDCounter++,\r\n      name: name,\r\n      timestamp: timestamp\r\n    };\r\n\r\n    var prevInteractions = interactionsRef.current;\r\n\r\n    // Traced interactions should stack/accumulate.\r\n    // To do that, clone the current interactions.\r\n    // The previous set will be restored upon completion.\r\n    var interactions = new Set(prevInteractions);\r\n    interactions.add(interaction);\r\n    interactionsRef.current = interactions;\r\n\r\n    var subscriber = subscriberRef.current;\r\n    var returnValue = void 0;\r\n\r\n    try {\r\n      if (subscriber !== null) {\r\n        subscriber.onInteractionTraced(interaction);\r\n      }\r\n    } finally {\r\n      try {\r\n        if (subscriber !== null) {\r\n          subscriber.onWorkStarted(interactions, threadID);\r\n        }\r\n      } finally {\r\n        try {\r\n          returnValue = callback();\r\n        } finally {\r\n          interactionsRef.current = prevInteractions;\r\n\r\n          try {\r\n            if (subscriber !== null) {\r\n              subscriber.onWorkStopped(interactions, threadID);\r\n            }\r\n          } finally {\r\n            interaction.__count--;\r\n\r\n            // If no async work was scheduled for this interaction,\r\n            // Notify subscribers that it's completed.\r\n            if (subscriber !== null && interaction.__count === 0) {\r\n              subscriber.onInteractionScheduledWorkCompleted(interaction);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return returnValue;\r\n  }\r\n\r\n  function unstable_wrap(callback) {\r\n    var threadID = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_THREAD_ID;\r\n\r\n    if (!enableSchedulerTracing) {\r\n      return callback;\r\n    }\r\n\r\n    var wrappedInteractions = interactionsRef.current;\r\n\r\n    var subscriber = subscriberRef.current;\r\n    if (subscriber !== null) {\r\n      subscriber.onWorkScheduled(wrappedInteractions, threadID);\r\n    }\r\n\r\n    // Update the pending async work count for the current interactions.\r\n    // Update after calling subscribers in case of error.\r\n    wrappedInteractions.forEach(function (interaction) {\r\n      interaction.__count++;\r\n    });\r\n\r\n    var hasRun = false;\r\n\r\n    function wrapped() {\r\n      var prevInteractions = interactionsRef.current;\r\n      interactionsRef.current = wrappedInteractions;\r\n\r\n      subscriber = subscriberRef.current;\r\n\r\n      try {\r\n        var returnValue = void 0;\r\n\r\n        try {\r\n          if (subscriber !== null) {\r\n            subscriber.onWorkStarted(wrappedInteractions, threadID);\r\n          }\r\n        } finally {\r\n          try {\r\n            returnValue = callback.apply(undefined, arguments);\r\n          } finally {\r\n            interactionsRef.current = prevInteractions;\r\n\r\n            if (subscriber !== null) {\r\n              subscriber.onWorkStopped(wrappedInteractions, threadID);\r\n            }\r\n          }\r\n        }\r\n\r\n        return returnValue;\r\n      } finally {\r\n        if (!hasRun) {\r\n          // We only expect a wrapped function to be executed once,\r\n          // But in the event that it's executed more than once–\r\n          // Only decrement the outstanding interaction counts once.\r\n          hasRun = true;\r\n\r\n          // Update pending async counts for all wrapped interactions.\r\n          // If this was the last scheduled async work for any of them,\r\n          // Mark them as completed.\r\n          wrappedInteractions.forEach(function (interaction) {\r\n            interaction.__count--;\r\n\r\n            if (subscriber !== null && interaction.__count === 0) {\r\n              subscriber.onInteractionScheduledWorkCompleted(interaction);\r\n            }\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    wrapped.cancel = function cancel() {\r\n      subscriber = subscriberRef.current;\r\n\r\n      try {\r\n        if (subscriber !== null) {\r\n          subscriber.onWorkCanceled(wrappedInteractions, threadID);\r\n        }\r\n      } finally {\r\n        // Update pending async counts for all wrapped interactions.\r\n        // If this was the last scheduled async work for any of them,\r\n        // Mark them as completed.\r\n        wrappedInteractions.forEach(function (interaction) {\r\n          interaction.__count--;\r\n\r\n          if (subscriber && interaction.__count === 0) {\r\n            subscriber.onInteractionScheduledWorkCompleted(interaction);\r\n          }\r\n        });\r\n      }\r\n    };\r\n\r\n    return wrapped;\r\n  }\r\n\r\n  var subscribers = null;\r\n  if (enableSchedulerTracing) {\r\n    subscribers = new Set();\r\n  }\r\n\r\n  function unstable_subscribe(subscriber) {\r\n    if (enableSchedulerTracing) {\r\n      subscribers.add(subscriber);\r\n\r\n      if (subscribers.size === 1) {\r\n        subscriberRef.current = {\r\n          onInteractionScheduledWorkCompleted: onInteractionScheduledWorkCompleted,\r\n          onInteractionTraced: onInteractionTraced,\r\n          onWorkCanceled: onWorkCanceled,\r\n          onWorkScheduled: onWorkScheduled,\r\n          onWorkStarted: onWorkStarted,\r\n          onWorkStopped: onWorkStopped\r\n        };\r\n      }\r\n    }\r\n  }\r\n\r\n  function unstable_unsubscribe(subscriber) {\r\n    if (enableSchedulerTracing) {\r\n      subscribers.delete(subscriber);\r\n\r\n      if (subscribers.size === 0) {\r\n        subscriberRef.current = null;\r\n      }\r\n    }\r\n  }\r\n\r\n  function onInteractionTraced(interaction) {\r\n    var didCatchError = false;\r\n    var caughtError = null;\r\n\r\n    subscribers.forEach(function (subscriber) {\r\n      try {\r\n        subscriber.onInteractionTraced(interaction);\r\n      } catch (error) {\r\n        if (!didCatchError) {\r\n          didCatchError = true;\r\n          caughtError = error;\r\n        }\r\n      }\r\n    });\r\n\r\n    if (didCatchError) {\r\n      throw caughtError;\r\n    }\r\n  }\r\n\r\n  function onInteractionScheduledWorkCompleted(interaction) {\r\n    var didCatchError = false;\r\n    var caughtError = null;\r\n\r\n    subscribers.forEach(function (subscriber) {\r\n      try {\r\n        subscriber.onInteractionScheduledWorkCompleted(interaction);\r\n      } catch (error) {\r\n        if (!didCatchError) {\r\n          didCatchError = true;\r\n          caughtError = error;\r\n        }\r\n      }\r\n    });\r\n\r\n    if (didCatchError) {\r\n      throw caughtError;\r\n    }\r\n  }\r\n\r\n  function onWorkScheduled(interactions, threadID) {\r\n    var didCatchError = false;\r\n    var caughtError = null;\r\n\r\n    subscribers.forEach(function (subscriber) {\r\n      try {\r\n        subscriber.onWorkScheduled(interactions, threadID);\r\n      } catch (error) {\r\n        if (!didCatchError) {\r\n          didCatchError = true;\r\n          caughtError = error;\r\n        }\r\n      }\r\n    });\r\n\r\n    if (didCatchError) {\r\n      throw caughtError;\r\n    }\r\n  }\r\n\r\n  function onWorkStarted(interactions, threadID) {\r\n    var didCatchError = false;\r\n    var caughtError = null;\r\n\r\n    subscribers.forEach(function (subscriber) {\r\n      try {\r\n        subscriber.onWorkStarted(interactions, threadID);\r\n      } catch (error) {\r\n        if (!didCatchError) {\r\n          didCatchError = true;\r\n          caughtError = error;\r\n        }\r\n      }\r\n    });\r\n\r\n    if (didCatchError) {\r\n      throw caughtError;\r\n    }\r\n  }\r\n\r\n  function onWorkStopped(interactions, threadID) {\r\n    var didCatchError = false;\r\n    var caughtError = null;\r\n\r\n    subscribers.forEach(function (subscriber) {\r\n      try {\r\n        subscriber.onWorkStopped(interactions, threadID);\r\n      } catch (error) {\r\n        if (!didCatchError) {\r\n          didCatchError = true;\r\n          caughtError = error;\r\n        }\r\n      }\r\n    });\r\n\r\n    if (didCatchError) {\r\n      throw caughtError;\r\n    }\r\n  }\r\n\r\n  function onWorkCanceled(interactions, threadID) {\r\n    var didCatchError = false;\r\n    var caughtError = null;\r\n\r\n    subscribers.forEach(function (subscriber) {\r\n      try {\r\n        subscriber.onWorkCanceled(interactions, threadID);\r\n      } catch (error) {\r\n        if (!didCatchError) {\r\n          didCatchError = true;\r\n          caughtError = error;\r\n        }\r\n      }\r\n    });\r\n\r\n    if (didCatchError) {\r\n      throw caughtError;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Keeps track of the current owner.\r\n   *\r\n   * The current owner is the component who should own any components that are\r\n   * currently being constructed.\r\n   */\r\n  var ReactCurrentOwner = {\r\n    /**\r\n     * @internal\r\n     * @type {ReactComponent}\r\n     */\r\n    current: null,\r\n    currentDispatcher: null\r\n  };\r\n\r\n  var BEFORE_SLASH_RE = /^(.*)[\\\\\\/]/;\r\n\r\n  var describeComponentFrame = function (name, source, ownerName) {\r\n    var sourceInfo = '';\r\n    if (source) {\r\n      var path = source.fileName;\r\n      var fileName = path.replace(BEFORE_SLASH_RE, '');\r\n      {\r\n        // In DEV, include code for a common special case:\r\n        // prefer \"folder/index.js\" instead of just \"index.js\".\r\n        if (/^index\\./.test(fileName)) {\r\n          var match = path.match(BEFORE_SLASH_RE);\r\n          if (match) {\r\n            var pathBeforeSlash = match[1];\r\n            if (pathBeforeSlash) {\r\n              var folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');\r\n              fileName = folderName + '/' + fileName;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';\r\n    } else if (ownerName) {\r\n      sourceInfo = ' (created by ' + ownerName + ')';\r\n    }\r\n    return '\\n    in ' + (name || 'Unknown') + sourceInfo;\r\n  };\r\n\r\n  var Resolved = 1;\r\n\r\n\r\n\r\n\r\n  function refineResolvedThenable(thenable) {\r\n    return thenable._reactStatus === Resolved ? thenable._reactResult : null;\r\n  }\r\n\r\n  function getComponentName(type) {\r\n    if (type == null) {\r\n      // Host root, text node or just invalid type.\r\n      return null;\r\n    }\r\n    {\r\n      if (typeof type.tag === 'number') {\r\n        warningWithoutStack$1(false, 'Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');\r\n      }\r\n    }\r\n    if (typeof type === 'function') {\r\n      return type.displayName || type.name || null;\r\n    }\r\n    if (typeof type === 'string') {\r\n      return type;\r\n    }\r\n    switch (type) {\r\n      case REACT_ASYNC_MODE_TYPE:\r\n        return 'AsyncMode';\r\n      case REACT_FRAGMENT_TYPE:\r\n        return 'Fragment';\r\n      case REACT_PORTAL_TYPE:\r\n        return 'Portal';\r\n      case REACT_PROFILER_TYPE:\r\n        return 'Profiler';\r\n      case REACT_STRICT_MODE_TYPE:\r\n        return 'StrictMode';\r\n      case REACT_PLACEHOLDER_TYPE:\r\n        return 'Placeholder';\r\n    }\r\n    if (typeof type === 'object') {\r\n      switch (type.$$typeof) {\r\n        case REACT_CONTEXT_TYPE:\r\n          return 'Context.Consumer';\r\n        case REACT_PROVIDER_TYPE:\r\n          return 'Context.Provider';\r\n        case REACT_FORWARD_REF_TYPE:\r\n          var renderFn = type.render;\r\n          var functionName = renderFn.displayName || renderFn.name || '';\r\n          return type.displayName || (functionName !== '' ? 'ForwardRef(' + functionName + ')' : 'ForwardRef');\r\n      }\r\n      if (typeof type.then === 'function') {\r\n        var thenable = type;\r\n        var resolvedThenable = refineResolvedThenable(thenable);\r\n        if (resolvedThenable) {\r\n          return getComponentName(resolvedThenable);\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  var ReactDebugCurrentFrame = {};\r\n\r\n  var currentlyValidatingElement = null;\r\n\r\n  function setCurrentlyValidatingElement(element) {\r\n    {\r\n      currentlyValidatingElement = element;\r\n    }\r\n  }\r\n\r\n  {\r\n    // Stack implementation injected by the current renderer.\r\n    ReactDebugCurrentFrame.getCurrentStack = null;\r\n\r\n    ReactDebugCurrentFrame.getStackAddendum = function () {\r\n      var stack = '';\r\n\r\n      // Add an extra top frame while an element is being validated\r\n      if (currentlyValidatingElement) {\r\n        var name = getComponentName(currentlyValidatingElement.type);\r\n        var owner = currentlyValidatingElement._owner;\r\n        stack += describeComponentFrame(name, currentlyValidatingElement._source, owner && getComponentName(owner.type));\r\n      }\r\n\r\n      // Delegate to the injected renderer-specific implementation\r\n      var impl = ReactDebugCurrentFrame.getCurrentStack;\r\n      if (impl) {\r\n        stack += impl() || '';\r\n      }\r\n\r\n      return stack;\r\n    };\r\n  }\r\n\r\n  var ReactSharedInternals = {\r\n    ReactCurrentOwner: ReactCurrentOwner,\r\n    // Used by renderers to avoid bundling object-assign twice in UMD bundles:\r\n    assign: objectAssign\r\n  };\r\n\r\n  {\r\n    // Re-export the schedule API(s) for UMD bundles.\r\n    // This avoids introducing a dependency on a new UMD global in a minor update,\r\n    // Since that would be a breaking change (e.g. for all existing CodeSandboxes).\r\n    // This re-export is only required for UMD bundles;\r\n    // CJS bundles use the shared NPM package.\r\n    objectAssign(ReactSharedInternals, {\r\n      Schedule: {\r\n        unstable_cancelScheduledWork: unstable_cancelScheduledWork,\r\n        unstable_now: getCurrentTime,\r\n        unstable_scheduleWork: unstable_scheduleWork\r\n      },\r\n      ScheduleTracing: {\r\n        __interactionsRef: interactionsRef,\r\n        __subscriberRef: subscriberRef,\r\n        unstable_clear: unstable_clear,\r\n        unstable_getCurrent: unstable_getCurrent,\r\n        unstable_getThreadID: unstable_getThreadID,\r\n        unstable_subscribe: unstable_subscribe,\r\n        unstable_trace: unstable_trace,\r\n        unstable_unsubscribe: unstable_unsubscribe,\r\n        unstable_wrap: unstable_wrap\r\n      }\r\n    });\r\n  }\r\n\r\n  {\r\n    objectAssign(ReactSharedInternals, {\r\n      // These should not be included in production.\r\n      ReactDebugCurrentFrame: ReactDebugCurrentFrame,\r\n      // Shim for React DOM 16.0.0 which still destructured (but not used) this.\r\n      // TODO: remove in React 17.0.\r\n      ReactComponentTreeHook: {}\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Similar to invariant but only logs a warning if the condition is not met.\r\n   * This can be used to log issues in development environments in critical\r\n   * paths. Removing the logging code for production environments will keep the\r\n   * same logic and follow the same code paths.\r\n   */\r\n\r\n  var warning = warningWithoutStack$1;\r\n\r\n  {\r\n    warning = function (condition, format) {\r\n      if (condition) {\r\n        return;\r\n      }\r\n      var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\r\n      var stack = ReactDebugCurrentFrame.getStackAddendum();\r\n      // eslint-disable-next-line react-internal/warning-and-invariant-args\r\n\r\n      for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\r\n        args[_key - 2] = arguments[_key];\r\n      }\r\n\r\n      warningWithoutStack$1.apply(undefined, [false, format + '%s'].concat(args, [stack]));\r\n    };\r\n  }\r\n\r\n  var warning$1 = warning;\r\n\r\n  var hasOwnProperty$1 = Object.prototype.hasOwnProperty;\r\n\r\n  var RESERVED_PROPS = {\r\n    key: true,\r\n    ref: true,\r\n    __self: true,\r\n    __source: true\r\n  };\r\n\r\n  var specialPropKeyWarningShown = void 0;\r\n  var specialPropRefWarningShown = void 0;\r\n\r\n  function hasValidRef(config) {\r\n    {\r\n      if (hasOwnProperty$1.call(config, 'ref')) {\r\n        var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\r\n        if (getter && getter.isReactWarning) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    return config.ref !== undefined;\r\n  }\r\n\r\n  function hasValidKey(config) {\r\n    {\r\n      if (hasOwnProperty$1.call(config, 'key')) {\r\n        var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\r\n        if (getter && getter.isReactWarning) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    return config.key !== undefined;\r\n  }\r\n\r\n  function defineKeyPropWarningGetter(props, displayName) {\r\n    var warnAboutAccessingKey = function () {\r\n      if (!specialPropKeyWarningShown) {\r\n        specialPropKeyWarningShown = true;\r\n        warningWithoutStack$1(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);\r\n      }\r\n    };\r\n    warnAboutAccessingKey.isReactWarning = true;\r\n    Object.defineProperty(props, 'key', {\r\n      get: warnAboutAccessingKey,\r\n      configurable: true\r\n    });\r\n  }\r\n\r\n  function defineRefPropWarningGetter(props, displayName) {\r\n    var warnAboutAccessingRef = function () {\r\n      if (!specialPropRefWarningShown) {\r\n        specialPropRefWarningShown = true;\r\n        warningWithoutStack$1(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);\r\n      }\r\n    };\r\n    warnAboutAccessingRef.isReactWarning = true;\r\n    Object.defineProperty(props, 'ref', {\r\n      get: warnAboutAccessingRef,\r\n      configurable: true\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Factory method to create a new React element. This no longer adheres to\r\n   * the class pattern, so do not use new to call it. Also, no instanceof check\r\n   * will work. Instead test $$typeof field against Symbol.for('react.element') to check\r\n   * if something is a React Element.\r\n   *\r\n   * @param {*} type\r\n   * @param {*} key\r\n   * @param {string|object} ref\r\n   * @param {*} self A *temporary* helper to detect places where `this` is\r\n   * different from the `owner` when React.createElement is called, so that we\r\n   * can warn. We want to get rid of owner and replace string `ref`s with arrow\r\n   * functions, and as long as `this` and owner are the same, there will be no\r\n   * change in behavior.\r\n   * @param {*} source An annotation object (added by a transpiler or otherwise)\r\n   * indicating filename, line number, and/or other information.\r\n   * @param {*} owner\r\n   * @param {*} props\r\n   * @internal\r\n   */\r\n  var ReactElement = function (type, key, ref, self, source, owner, props) {\r\n    var element = {\r\n      // This tag allows us to uniquely identify this as a React Element\r\n      $$typeof: REACT_ELEMENT_TYPE,\r\n\r\n      // Built-in properties that belong on the element\r\n      type: type,\r\n      key: key,\r\n      ref: ref,\r\n      props: props,\r\n\r\n      // Record the component responsible for creating this element.\r\n      _owner: owner\r\n    };\r\n\r\n    {\r\n      // The validation flag is currently mutative. We put it on\r\n      // an external backing store so that we can freeze the whole object.\r\n      // This can be replaced with a WeakMap once they are implemented in\r\n      // commonly used development environments.\r\n      element._store = {};\r\n\r\n      // To make comparing ReactElements easier for testing purposes, we make\r\n      // the validation flag non-enumerable (where possible, which should\r\n      // include every environment we run tests in), so the test framework\r\n      // ignores it.\r\n      Object.defineProperty(element._store, 'validated', {\r\n        configurable: false,\r\n        enumerable: false,\r\n        writable: true,\r\n        value: false\r\n      });\r\n      // self and source are DEV only properties.\r\n      Object.defineProperty(element, '_self', {\r\n        configurable: false,\r\n        enumerable: false,\r\n        writable: false,\r\n        value: self\r\n      });\r\n      // Two elements created in two different places should be considered\r\n      // equal for testing purposes and therefore we hide it from enumeration.\r\n      Object.defineProperty(element, '_source', {\r\n        configurable: false,\r\n        enumerable: false,\r\n        writable: false,\r\n        value: source\r\n      });\r\n      if (Object.freeze) {\r\n        Object.freeze(element.props);\r\n        Object.freeze(element);\r\n      }\r\n    }\r\n\r\n    return element;\r\n  };\r\n\r\n  /**\r\n   * Create and return a new ReactElement of the given type.\r\n   * See https://reactjs.org/docs/react-api.html#createelement\r\n   */\r\n  function createElement(type, config, children) {\r\n    var propName = void 0;\r\n\r\n    // Reserved names are extracted\r\n    var props = {};\r\n\r\n    var key = null;\r\n    var ref = null;\r\n    var self = null;\r\n    var source = null;\r\n\r\n    if (config != null) {\r\n      if (hasValidRef(config)) {\r\n        ref = config.ref;\r\n      }\r\n      if (hasValidKey(config)) {\r\n        key = '' + config.key;\r\n      }\r\n\r\n      self = config.__self === undefined ? null : config.__self;\r\n      source = config.__source === undefined ? null : config.__source;\r\n      // Remaining properties are added to a new props object\r\n      for (propName in config) {\r\n        if (hasOwnProperty$1.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\r\n          props[propName] = config[propName];\r\n        }\r\n      }\r\n    }\r\n\r\n    // Children can be more than one argument, and those are transferred onto\r\n    // the newly allocated props object.\r\n    var childrenLength = arguments.length - 2;\r\n    if (childrenLength === 1) {\r\n      props.children = children;\r\n    } else if (childrenLength > 1) {\r\n      var childArray = Array(childrenLength);\r\n      for (var i = 0; i < childrenLength; i++) {\r\n        childArray[i] = arguments[i + 2];\r\n      }\r\n      {\r\n        if (Object.freeze) {\r\n          Object.freeze(childArray);\r\n        }\r\n      }\r\n      props.children = childArray;\r\n    }\r\n\r\n    // Resolve default props\r\n    if (type && type.defaultProps) {\r\n      var defaultProps = type.defaultProps;\r\n      for (propName in defaultProps) {\r\n        if (props[propName] === undefined) {\r\n          props[propName] = defaultProps[propName];\r\n        }\r\n      }\r\n    }\r\n    {\r\n      if (key || ref) {\r\n        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\r\n        if (key) {\r\n          defineKeyPropWarningGetter(props, displayName);\r\n        }\r\n        if (ref) {\r\n          defineRefPropWarningGetter(props, displayName);\r\n        }\r\n      }\r\n    }\r\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\r\n  }\r\n\r\n  /**\r\n   * Return a function that produces ReactElements of a given type.\r\n   * See https://reactjs.org/docs/react-api.html#createfactory\r\n   */\r\n\r\n\r\n  function cloneAndReplaceKey(oldElement, newKey) {\r\n    var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\r\n\r\n    return newElement;\r\n  }\r\n\r\n  /**\r\n   * Clone and return a new ReactElement using element as the starting point.\r\n   * See https://reactjs.org/docs/react-api.html#cloneelement\r\n   */\r\n  function cloneElement(element, config, children) {\r\n    !!(element === null || element === undefined) ? invariant(false, 'React.cloneElement(...): The argument must be a React element, but you passed %s.', element) : void 0;\r\n\r\n    var propName = void 0;\r\n\r\n    // Original props are copied\r\n    var props = objectAssign({}, element.props);\r\n\r\n    // Reserved names are extracted\r\n    var key = element.key;\r\n    var ref = element.ref;\r\n    // Self is preserved since the owner is preserved.\r\n    var self = element._self;\r\n    // Source is preserved since cloneElement is unlikely to be targeted by a\r\n    // transpiler, and the original source is probably a better indicator of the\r\n    // true owner.\r\n    var source = element._source;\r\n\r\n    // Owner will be preserved, unless ref is overridden\r\n    var owner = element._owner;\r\n\r\n    if (config != null) {\r\n      if (hasValidRef(config)) {\r\n        // Silently steal the ref from the parent.\r\n        ref = config.ref;\r\n        owner = ReactCurrentOwner.current;\r\n      }\r\n      if (hasValidKey(config)) {\r\n        key = '' + config.key;\r\n      }\r\n\r\n      // Remaining properties override existing props\r\n      var defaultProps = void 0;\r\n      if (element.type && element.type.defaultProps) {\r\n        defaultProps = element.type.defaultProps;\r\n      }\r\n      for (propName in config) {\r\n        if (hasOwnProperty$1.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\r\n          if (config[propName] === undefined && defaultProps !== undefined) {\r\n            // Resolve default props\r\n            props[propName] = defaultProps[propName];\r\n          } else {\r\n            props[propName] = config[propName];\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // Children can be more than one argument, and those are transferred onto\r\n    // the newly allocated props object.\r\n    var childrenLength = arguments.length - 2;\r\n    if (childrenLength === 1) {\r\n      props.children = children;\r\n    } else if (childrenLength > 1) {\r\n      var childArray = Array(childrenLength);\r\n      for (var i = 0; i < childrenLength; i++) {\r\n        childArray[i] = arguments[i + 2];\r\n      }\r\n      props.children = childArray;\r\n    }\r\n\r\n    return ReactElement(element.type, key, ref, self, source, owner, props);\r\n  }\r\n\r\n  /**\r\n   * Verifies the object is a ReactElement.\r\n   * See https://reactjs.org/docs/react-api.html#isvalidelement\r\n   * @param {?object} object\r\n   * @return {boolean} True if `object` is a ReactElement.\r\n   * @final\r\n   */\r\n  function isValidElement(object) {\r\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\r\n  }\r\n\r\n  var SEPARATOR = '.';\r\n  var SUBSEPARATOR = ':';\r\n\r\n  /**\r\n   * Escape and wrap key so it is safe to use as a reactid\r\n   *\r\n   * @param {string} key to be escaped.\r\n   * @return {string} the escaped key.\r\n   */\r\n  function escape(key) {\r\n    var escapeRegex = /[=:]/g;\r\n    var escaperLookup = {\r\n      '=': '=0',\r\n      ':': '=2'\r\n    };\r\n    var escapedString = ('' + key).replace(escapeRegex, function (match) {\r\n      return escaperLookup[match];\r\n    });\r\n\r\n    return '$' + escapedString;\r\n  }\r\n\r\n  /**\r\n   * TODO: Test that a single child and an array with one item have the same key\r\n   * pattern.\r\n   */\r\n\r\n  var didWarnAboutMaps = false;\r\n\r\n  var userProvidedKeyEscapeRegex = /\\/+/g;\r\n  function escapeUserProvidedKey(text) {\r\n    return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');\r\n  }\r\n\r\n  var POOL_SIZE = 10;\r\n  var traverseContextPool = [];\r\n  function getPooledTraverseContext(mapResult, keyPrefix, mapFunction, mapContext) {\r\n    if (traverseContextPool.length) {\r\n      var traverseContext = traverseContextPool.pop();\r\n      traverseContext.result = mapResult;\r\n      traverseContext.keyPrefix = keyPrefix;\r\n      traverseContext.func = mapFunction;\r\n      traverseContext.context = mapContext;\r\n      traverseContext.count = 0;\r\n      return traverseContext;\r\n    } else {\r\n      return {\r\n        result: mapResult,\r\n        keyPrefix: keyPrefix,\r\n        func: mapFunction,\r\n        context: mapContext,\r\n        count: 0\r\n      };\r\n    }\r\n  }\r\n\r\n  function releaseTraverseContext(traverseContext) {\r\n    traverseContext.result = null;\r\n    traverseContext.keyPrefix = null;\r\n    traverseContext.func = null;\r\n    traverseContext.context = null;\r\n    traverseContext.count = 0;\r\n    if (traverseContextPool.length < POOL_SIZE) {\r\n      traverseContextPool.push(traverseContext);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {?*} children Children tree container.\r\n   * @param {!string} nameSoFar Name of the key path so far.\r\n   * @param {!function} callback Callback to invoke with each child found.\r\n   * @param {?*} traverseContext Used to pass information throughout the traversal\r\n   * process.\r\n   * @return {!number} The number of children in this subtree.\r\n   */\r\n  function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {\r\n    var type = typeof children;\r\n\r\n    if (type === 'undefined' || type === 'boolean') {\r\n      // All of the above are perceived as null.\r\n      children = null;\r\n    }\r\n\r\n    var invokeCallback = false;\r\n\r\n    if (children === null) {\r\n      invokeCallback = true;\r\n    } else {\r\n      switch (type) {\r\n        case 'string':\r\n        case 'number':\r\n          invokeCallback = true;\r\n          break;\r\n        case 'object':\r\n          switch (children.$$typeof) {\r\n            case REACT_ELEMENT_TYPE:\r\n            case REACT_PORTAL_TYPE:\r\n              invokeCallback = true;\r\n          }\r\n      }\r\n    }\r\n\r\n    if (invokeCallback) {\r\n      callback(traverseContext, children,\r\n      // If it's the only child, treat the name as if it was wrapped in an array\r\n      // so that it's consistent if the number of children grows.\r\n      nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);\r\n      return 1;\r\n    }\r\n\r\n    var child = void 0;\r\n    var nextName = void 0;\r\n    var subtreeCount = 0; // Count of children found in the current subtree.\r\n    var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\r\n\r\n    if (Array.isArray(children)) {\r\n      for (var i = 0; i < children.length; i++) {\r\n        child = children[i];\r\n        nextName = nextNamePrefix + getComponentKey(child, i);\r\n        subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\r\n      }\r\n    } else {\r\n      var iteratorFn = getIteratorFn(children);\r\n      if (typeof iteratorFn === 'function') {\r\n        {\r\n          // Warn about using Maps as children\r\n          if (iteratorFn === children.entries) {\r\n            !didWarnAboutMaps ? warning$1(false, 'Using Maps as children is unsupported and will likely yield ' + 'unexpected results. Convert it to a sequence/iterable of keyed ' + 'ReactElements instead.') : void 0;\r\n            didWarnAboutMaps = true;\r\n          }\r\n        }\r\n\r\n        var iterator = iteratorFn.call(children);\r\n        var step = void 0;\r\n        var ii = 0;\r\n        while (!(step = iterator.next()).done) {\r\n          child = step.value;\r\n          nextName = nextNamePrefix + getComponentKey(child, ii++);\r\n          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\r\n        }\r\n      } else if (type === 'object') {\r\n        var addendum = '';\r\n        {\r\n          addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + ReactDebugCurrentFrame.getStackAddendum();\r\n        }\r\n        var childrenString = '' + children;\r\n        invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum);\r\n      }\r\n    }\r\n\r\n    return subtreeCount;\r\n  }\r\n\r\n  /**\r\n   * Traverses children that are typically specified as `props.children`, but\r\n   * might also be specified through attributes:\r\n   *\r\n   * - `traverseAllChildren(this.props.children, ...)`\r\n   * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\r\n   *\r\n   * The `traverseContext` is an optional argument that is passed through the\r\n   * entire traversal. It can be used to store accumulations or anything else that\r\n   * the callback might find relevant.\r\n   *\r\n   * @param {?*} children Children tree object.\r\n   * @param {!function} callback To invoke upon traversing each child.\r\n   * @param {?*} traverseContext Context for traversal.\r\n   * @return {!number} The number of children in this subtree.\r\n   */\r\n  function traverseAllChildren(children, callback, traverseContext) {\r\n    if (children == null) {\r\n      return 0;\r\n    }\r\n\r\n    return traverseAllChildrenImpl(children, '', callback, traverseContext);\r\n  }\r\n\r\n  /**\r\n   * Generate a key string that identifies a component within a set.\r\n   *\r\n   * @param {*} component A component that could contain a manual key.\r\n   * @param {number} index Index that is used if a manual key is not provided.\r\n   * @return {string}\r\n   */\r\n  function getComponentKey(component, index) {\r\n    // Do some typechecking here since we call this blindly. We want to ensure\r\n    // that we don't block potential future ES APIs.\r\n    if (typeof component === 'object' && component !== null && component.key != null) {\r\n      // Explicit key\r\n      return escape(component.key);\r\n    }\r\n    // Implicit key determined by the index in the set\r\n    return index.toString(36);\r\n  }\r\n\r\n  function forEachSingleChild(bookKeeping, child, name) {\r\n    var func = bookKeeping.func,\r\n        context = bookKeeping.context;\r\n\r\n    func.call(context, child, bookKeeping.count++);\r\n  }\r\n\r\n  /**\r\n   * Iterates through children that are typically specified as `props.children`.\r\n   *\r\n   * See https://reactjs.org/docs/react-api.html#reactchildrenforeach\r\n   *\r\n   * The provided forEachFunc(child, index) will be called for each\r\n   * leaf child.\r\n   *\r\n   * @param {?*} children Children tree container.\r\n   * @param {function(*, int)} forEachFunc\r\n   * @param {*} forEachContext Context for forEachContext.\r\n   */\r\n  function forEachChildren(children, forEachFunc, forEachContext) {\r\n    if (children == null) {\r\n      return children;\r\n    }\r\n    var traverseContext = getPooledTraverseContext(null, null, forEachFunc, forEachContext);\r\n    traverseAllChildren(children, forEachSingleChild, traverseContext);\r\n    releaseTraverseContext(traverseContext);\r\n  }\r\n\r\n  function mapSingleChildIntoContext(bookKeeping, child, childKey) {\r\n    var result = bookKeeping.result,\r\n        keyPrefix = bookKeeping.keyPrefix,\r\n        func = bookKeeping.func,\r\n        context = bookKeeping.context;\r\n\r\n\r\n    var mappedChild = func.call(context, child, bookKeeping.count++);\r\n    if (Array.isArray(mappedChild)) {\r\n      mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, function (c) {\r\n        return c;\r\n      });\r\n    } else if (mappedChild != null) {\r\n      if (isValidElement(mappedChild)) {\r\n        mappedChild = cloneAndReplaceKey(mappedChild,\r\n        // Keep both the (mapped) and old keys if they differ, just as\r\n        // traverseAllChildren used to do for objects as children\r\n        keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);\r\n      }\r\n      result.push(mappedChild);\r\n    }\r\n  }\r\n\r\n  function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {\r\n    var escapedPrefix = '';\r\n    if (prefix != null) {\r\n      escapedPrefix = escapeUserProvidedKey(prefix) + '/';\r\n    }\r\n    var traverseContext = getPooledTraverseContext(array, escapedPrefix, func, context);\r\n    traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);\r\n    releaseTraverseContext(traverseContext);\r\n  }\r\n\r\n  /**\r\n   * Maps children that are typically specified as `props.children`.\r\n   *\r\n   * See https://reactjs.org/docs/react-api.html#reactchildrenmap\r\n   *\r\n   * The provided mapFunction(child, key, index) will be called for each\r\n   * leaf child.\r\n   *\r\n   * @param {?*} children Children tree container.\r\n   * @param {function(*, int)} func The map function.\r\n   * @param {*} context Context for mapFunction.\r\n   * @return {object} Object containing the ordered map of results.\r\n   */\r\n  function mapChildren(children, func, context) {\r\n    if (children == null) {\r\n      return children;\r\n    }\r\n    var result = [];\r\n    mapIntoWithKeyPrefixInternal(children, result, null, func, context);\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Count the number of children that are typically specified as\r\n   * `props.children`.\r\n   *\r\n   * See https://reactjs.org/docs/react-api.html#reactchildrencount\r\n   *\r\n   * @param {?*} children Children tree container.\r\n   * @return {number} The number of children.\r\n   */\r\n  function countChildren(children) {\r\n    return traverseAllChildren(children, function () {\r\n      return null;\r\n    }, null);\r\n  }\r\n\r\n  /**\r\n   * Flatten a children object (typically specified as `props.children`) and\r\n   * return an array with appropriately re-keyed children.\r\n   *\r\n   * See https://reactjs.org/docs/react-api.html#reactchildrentoarray\r\n   */\r\n  function toArray(children) {\r\n    var result = [];\r\n    mapIntoWithKeyPrefixInternal(children, result, null, function (child) {\r\n      return child;\r\n    });\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Returns the first child in a collection of children and verifies that there\r\n   * is only one child in the collection.\r\n   *\r\n   * See https://reactjs.org/docs/react-api.html#reactchildrenonly\r\n   *\r\n   * The current implementation of this function assumes that a single child gets\r\n   * passed without a wrapper, but the purpose of this helper function is to\r\n   * abstract away the particular structure of children.\r\n   *\r\n   * @param {?object} children Child collection structure.\r\n   * @return {ReactElement} The first and only `ReactElement` contained in the\r\n   * structure.\r\n   */\r\n  function onlyChild(children) {\r\n    !isValidElement(children) ? invariant(false, 'React.Children.only expected to receive a single React element child.') : void 0;\r\n    return children;\r\n  }\r\n\r\n  function readContext(context, observedBits) {\r\n    var dispatcher = ReactCurrentOwner.currentDispatcher;\r\n    !(dispatcher !== null) ? invariant(false, 'Context.unstable_read(): Context can only be read while React is rendering, e.g. inside the render method or getDerivedStateFromProps.') : void 0;\r\n    return dispatcher.readContext(context, observedBits);\r\n  }\r\n\r\n  function createContext(defaultValue, calculateChangedBits) {\r\n    if (calculateChangedBits === undefined) {\r\n      calculateChangedBits = null;\r\n    } else {\r\n      {\r\n        !(calculateChangedBits === null || typeof calculateChangedBits === 'function') ? warningWithoutStack$1(false, 'createContext: Expected the optional second argument to be a ' + 'function. Instead received: %s', calculateChangedBits) : void 0;\r\n      }\r\n    }\r\n\r\n    var context = {\r\n      $$typeof: REACT_CONTEXT_TYPE,\r\n      _calculateChangedBits: calculateChangedBits,\r\n      // As a workaround to support multiple concurrent renderers, we categorize\r\n      // some renderers as primary and others as secondary. We only expect\r\n      // there to be two concurrent renderers at most: React Native (primary) and\r\n      // Fabric (secondary); React DOM (primary) and React ART (secondary).\r\n      // Secondary renderers store their context values on separate fields.\r\n      _currentValue: defaultValue,\r\n      _currentValue2: defaultValue,\r\n      // These are circular\r\n      Provider: null,\r\n      Consumer: null,\r\n      unstable_read: null\r\n    };\r\n\r\n    context.Provider = {\r\n      $$typeof: REACT_PROVIDER_TYPE,\r\n      _context: context\r\n    };\r\n    context.Consumer = context;\r\n    context.unstable_read = readContext.bind(null, context);\r\n\r\n    {\r\n      context._currentRenderer = null;\r\n      context._currentRenderer2 = null;\r\n    }\r\n\r\n    return context;\r\n  }\r\n\r\n  function lazy(ctor) {\r\n    var thenable = null;\r\n    return {\r\n      then: function (resolve, reject) {\r\n        if (thenable === null) {\r\n          // Lazily create thenable by wrapping in an extra thenable.\r\n          thenable = ctor();\r\n          ctor = null;\r\n        }\r\n        return thenable.then(resolve, reject);\r\n      },\r\n\r\n      // React uses these fields to store the result.\r\n      _reactStatus: -1,\r\n      _reactResult: null\r\n    };\r\n  }\r\n\r\n  function forwardRef(render) {\r\n    {\r\n      if (typeof render !== 'function') {\r\n        warningWithoutStack$1(false, 'forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);\r\n      } else {\r\n        !(\r\n        // Do not warn for 0 arguments because it could be due to usage of the 'arguments' object\r\n        render.length === 0 || render.length === 2) ? warningWithoutStack$1(false, 'forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.') : void 0;\r\n      }\r\n\r\n      if (render != null) {\r\n        !(render.defaultProps == null && render.propTypes == null) ? warningWithoutStack$1(false, 'forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?') : void 0;\r\n      }\r\n    }\r\n\r\n    return {\r\n      $$typeof: REACT_FORWARD_REF_TYPE,\r\n      render: render\r\n    };\r\n  }\r\n\r\n  function isValidElementType(type) {\r\n    return typeof type === 'string' || typeof type === 'function' ||\r\n    // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\r\n    type === REACT_FRAGMENT_TYPE || type === REACT_ASYNC_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_PLACEHOLDER_TYPE || typeof type === 'object' && type !== null && (typeof type.then === 'function' || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE);\r\n  }\r\n\r\n  /**\r\n   * Copyright (c) 2013-present, Facebook, Inc.\r\n   *\r\n   * This source code is licensed under the MIT license found in the\r\n   * LICENSE file in the root directory of this source tree.\r\n   */\r\n\r\n\r\n\r\n  var ReactPropTypesSecret$1 = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\r\n\r\n  var ReactPropTypesSecret_1 = ReactPropTypesSecret$1;\r\n\r\n  /**\r\n   * Copyright (c) 2013-present, Facebook, Inc.\r\n   *\r\n   * This source code is licensed under the MIT license found in the\r\n   * LICENSE file in the root directory of this source tree.\r\n   */\r\n\r\n\r\n\r\n  var printWarning$1 = function() {};\r\n\r\n  {\r\n    var ReactPropTypesSecret = ReactPropTypesSecret_1;\r\n    var loggedTypeFailures = {};\r\n\r\n    printWarning$1 = function(text) {\r\n      var message = 'Warning: ' + text;\r\n      if (typeof console !== 'undefined') {\r\n        console.error(message);\r\n      }\r\n      try {\r\n        // --- Welcome to debugging React ---\r\n        // This error was thrown as a convenience so that you can use this stack\r\n        // to find the callsite that caused this warning to fire.\r\n        throw new Error(message);\r\n      } catch (x) {}\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Assert that the values match with the type specs.\r\n   * Error messages are memorized and will only be shown once.\r\n   *\r\n   * @param {object} typeSpecs Map of name to a ReactPropType\r\n   * @param {object} values Runtime values that need to be type-checked\r\n   * @param {string} location e.g. \"prop\", \"context\", \"child context\"\r\n   * @param {string} componentName Name of the component for error messages.\r\n   * @param {?Function} getStack Returns the component stack.\r\n   * @private\r\n   */\r\n  function checkPropTypes(typeSpecs, values, location, componentName, getStack) {\r\n    {\r\n      for (var typeSpecName in typeSpecs) {\r\n        if (typeSpecs.hasOwnProperty(typeSpecName)) {\r\n          var error;\r\n          // Prop type validation may throw. In case they do, we don't want to\r\n          // fail the render phase where it didn't fail before. So we log it.\r\n          // After these have been cleaned up, we'll let them throw.\r\n          try {\r\n            // This is intentionally an invariant that gets caught. It's the same\r\n            // behavior as without this statement except with a better message.\r\n            if (typeof typeSpecs[typeSpecName] !== 'function') {\r\n              var err = Error(\r\n                (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +\r\n                'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'\r\n              );\r\n              err.name = 'Invariant Violation';\r\n              throw err;\r\n            }\r\n            error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\r\n          } catch (ex) {\r\n            error = ex;\r\n          }\r\n          if (error && !(error instanceof Error)) {\r\n            printWarning$1(\r\n              (componentName || 'React class') + ': type specification of ' +\r\n              location + ' `' + typeSpecName + '` is invalid; the type checker ' +\r\n              'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +\r\n              'You may have forgotten to pass an argument to the type checker ' +\r\n              'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\r\n              'shape all require an argument).'\r\n            );\r\n\r\n          }\r\n          if (error instanceof Error && !(error.message in loggedTypeFailures)) {\r\n            // Only monitor this failure once because there tends to be a lot of the\r\n            // same error.\r\n            loggedTypeFailures[error.message] = true;\r\n\r\n            var stack = getStack ? getStack() : '';\r\n\r\n            printWarning$1(\r\n              'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  var checkPropTypes_1 = checkPropTypes;\r\n\r\n  /**\r\n   * ReactElementValidator provides a wrapper around a element factory\r\n   * which validates the props passed to the element. This is intended to be\r\n   * used only in DEV and could be replaced by a static type checker for languages\r\n   * that support it.\r\n   */\r\n\r\n  var propTypesMisspellWarningShown = void 0;\r\n\r\n  {\r\n    propTypesMisspellWarningShown = false;\r\n  }\r\n\r\n  function getDeclarationErrorAddendum() {\r\n    if (ReactCurrentOwner.current) {\r\n      var name = getComponentName(ReactCurrentOwner.current.type);\r\n      if (name) {\r\n        return '\\n\\nCheck the render method of `' + name + '`.';\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n\r\n  function getSourceInfoErrorAddendum(elementProps) {\r\n    if (elementProps !== null && elementProps !== undefined && elementProps.__source !== undefined) {\r\n      var source = elementProps.__source;\r\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\r\n      var lineNumber = source.lineNumber;\r\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  /**\r\n   * Warn if there's no key explicitly set on dynamic arrays of children or\r\n   * object keys are not valid. This allows us to keep track of children between\r\n   * updates.\r\n   */\r\n  var ownerHasKeyUseWarning = {};\r\n\r\n  function getCurrentComponentErrorInfo(parentType) {\r\n    var info = getDeclarationErrorAddendum();\r\n\r\n    if (!info) {\r\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\r\n      if (parentName) {\r\n        info = '\\n\\nCheck the top-level render call using <' + parentName + '>.';\r\n      }\r\n    }\r\n    return info;\r\n  }\r\n\r\n  /**\r\n   * Warn if the element doesn't have an explicit key assigned to it.\r\n   * This element is in an array. The array could grow and shrink or be\r\n   * reordered. All children that haven't already been validated are required to\r\n   * have a \"key\" property assigned to it. Error statuses are cached so a warning\r\n   * will only be shown once.\r\n   *\r\n   * @internal\r\n   * @param {ReactElement} element Element that requires a key.\r\n   * @param {*} parentType element's parent's type.\r\n   */\r\n  function validateExplicitKey(element, parentType) {\r\n    if (!element._store || element._store.validated || element.key != null) {\r\n      return;\r\n    }\r\n    element._store.validated = true;\r\n\r\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\r\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\r\n      return;\r\n    }\r\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true;\r\n\r\n    // Usually the current owner is the offender, but if it accepts children as a\r\n    // property, it may be the creator of the child that's responsible for\r\n    // assigning it a key.\r\n    var childOwner = '';\r\n    if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\r\n      // Give the component that originally created this child.\r\n      childOwner = ' It was passed a child from ' + getComponentName(element._owner.type) + '.';\r\n    }\r\n\r\n    setCurrentlyValidatingElement(element);\r\n    {\r\n      warning$1(false, 'Each child in an array or iterator should have a unique \"key\" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.', currentComponentErrorInfo, childOwner);\r\n    }\r\n    setCurrentlyValidatingElement(null);\r\n  }\r\n\r\n  /**\r\n   * Ensure that every element either is passed in a static location, in an\r\n   * array with an explicit keys property defined, or in an object literal\r\n   * with valid key property.\r\n   *\r\n   * @internal\r\n   * @param {ReactNode} node Statically passed child of any type.\r\n   * @param {*} parentType node's parent's type.\r\n   */\r\n  function validateChildKeys(node, parentType) {\r\n    if (typeof node !== 'object') {\r\n      return;\r\n    }\r\n    if (Array.isArray(node)) {\r\n      for (var i = 0; i < node.length; i++) {\r\n        var child = node[i];\r\n        if (isValidElement(child)) {\r\n          validateExplicitKey(child, parentType);\r\n        }\r\n      }\r\n    } else if (isValidElement(node)) {\r\n      // This element was passed in a valid location.\r\n      if (node._store) {\r\n        node._store.validated = true;\r\n      }\r\n    } else if (node) {\r\n      var iteratorFn = getIteratorFn(node);\r\n      if (typeof iteratorFn === 'function') {\r\n        // Entry iterators used to provide implicit keys,\r\n        // but now we print a separate warning for them later.\r\n        if (iteratorFn !== node.entries) {\r\n          var iterator = iteratorFn.call(node);\r\n          var step = void 0;\r\n          while (!(step = iterator.next()).done) {\r\n            if (isValidElement(step.value)) {\r\n              validateExplicitKey(step.value, parentType);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Given an element, validate that its props follow the propTypes definition,\r\n   * provided by the type.\r\n   *\r\n   * @param {ReactElement} element\r\n   */\r\n  function validatePropTypes(element) {\r\n    var type = element.type;\r\n    var name = void 0,\r\n        propTypes = void 0;\r\n    if (typeof type === 'function') {\r\n      // Class or functional component\r\n      name = type.displayName || type.name;\r\n      propTypes = type.propTypes;\r\n    } else if (typeof type === 'object' && type !== null && type.$$typeof === REACT_FORWARD_REF_TYPE) {\r\n      // ForwardRef\r\n      var functionName = type.render.displayName || type.render.name || '';\r\n      name = type.displayName || (functionName !== '' ? 'ForwardRef(' + functionName + ')' : 'ForwardRef');\r\n      propTypes = type.propTypes;\r\n    } else {\r\n      return;\r\n    }\r\n    if (propTypes) {\r\n      setCurrentlyValidatingElement(element);\r\n      checkPropTypes_1(propTypes, element.props, 'prop', name, ReactDebugCurrentFrame.getStackAddendum);\r\n      setCurrentlyValidatingElement(null);\r\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\r\n      propTypesMisspellWarningShown = true;\r\n      warningWithoutStack$1(false, 'Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', name || 'Unknown');\r\n    }\r\n    if (typeof type.getDefaultProps === 'function') {\r\n      !type.getDefaultProps.isReactClassApproved ? warningWithoutStack$1(false, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Given a fragment, validate that it can only be provided with fragment props\r\n   * @param {ReactElement} fragment\r\n   */\r\n  function validateFragmentProps(fragment) {\r\n    setCurrentlyValidatingElement(fragment);\r\n\r\n    var keys = Object.keys(fragment.props);\r\n    for (var i = 0; i < keys.length; i++) {\r\n      var key = keys[i];\r\n      if (key !== 'children' && key !== 'key') {\r\n        warning$1(false, 'Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (fragment.ref !== null) {\r\n      warning$1(false, 'Invalid attribute `ref` supplied to `React.Fragment`.');\r\n    }\r\n\r\n    setCurrentlyValidatingElement(null);\r\n  }\r\n\r\n  function createElementWithValidation(type, props, children) {\r\n    var validType = isValidElementType(type);\r\n\r\n    // We warn in this case but don't throw. We expect the element creation to\r\n    // succeed and there will likely be errors in render.\r\n    if (!validType) {\r\n      var info = '';\r\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\r\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\r\n      }\r\n\r\n      var sourceInfo = getSourceInfoErrorAddendum(props);\r\n      if (sourceInfo) {\r\n        info += sourceInfo;\r\n      } else {\r\n        info += getDeclarationErrorAddendum();\r\n      }\r\n\r\n      var typeString = void 0;\r\n      if (type === null) {\r\n        typeString = 'null';\r\n      } else if (Array.isArray(type)) {\r\n        typeString = 'array';\r\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\r\n        typeString = '<' + (getComponentName(type.type) || 'Unknown') + ' />';\r\n        info = ' Did you accidentally export a JSX literal instead of a component?';\r\n      } else {\r\n        typeString = typeof type;\r\n      }\r\n\r\n      warning$1(false, 'React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\r\n    }\r\n\r\n    var element = createElement.apply(this, arguments);\r\n\r\n    // The result can be nullish if a mock or a custom function is used.\r\n    // TODO: Drop this when these are no longer allowed as the type argument.\r\n    if (element == null) {\r\n      return element;\r\n    }\r\n\r\n    // Skip key warning if the type isn't valid since our key validation logic\r\n    // doesn't expect a non-string/function type and can throw confusing errors.\r\n    // We don't want exception behavior to differ between dev and prod.\r\n    // (Rendering will throw with a helpful message and as soon as the type is\r\n    // fixed, the key warnings will appear.)\r\n    if (validType) {\r\n      for (var i = 2; i < arguments.length; i++) {\r\n        validateChildKeys(arguments[i], type);\r\n      }\r\n    }\r\n\r\n    if (type === REACT_FRAGMENT_TYPE) {\r\n      validateFragmentProps(element);\r\n    } else {\r\n      validatePropTypes(element);\r\n    }\r\n\r\n    return element;\r\n  }\r\n\r\n  function createFactoryWithValidation(type) {\r\n    var validatedFactory = createElementWithValidation.bind(null, type);\r\n    validatedFactory.type = type;\r\n    // Legacy hook: remove it\r\n    {\r\n      Object.defineProperty(validatedFactory, 'type', {\r\n        enumerable: false,\r\n        get: function () {\r\n          lowPriorityWarning$1(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');\r\n          Object.defineProperty(this, 'type', {\r\n            value: type\r\n          });\r\n          return type;\r\n        }\r\n      });\r\n    }\r\n\r\n    return validatedFactory;\r\n  }\r\n\r\n  function cloneElementWithValidation(element, props, children) {\r\n    var newElement = cloneElement.apply(this, arguments);\r\n    for (var i = 2; i < arguments.length; i++) {\r\n      validateChildKeys(arguments[i], newElement.type);\r\n    }\r\n    validatePropTypes(newElement);\r\n    return newElement;\r\n  }\r\n\r\n  var React = {\r\n    Children: {\r\n      map: mapChildren,\r\n      forEach: forEachChildren,\r\n      count: countChildren,\r\n      toArray: toArray,\r\n      only: onlyChild\r\n    },\r\n\r\n    createRef: createRef,\r\n    Component: Component,\r\n    PureComponent: PureComponent,\r\n\r\n    createContext: createContext,\r\n    forwardRef: forwardRef,\r\n\r\n    Fragment: REACT_FRAGMENT_TYPE,\r\n    StrictMode: REACT_STRICT_MODE_TYPE,\r\n    unstable_AsyncMode: REACT_ASYNC_MODE_TYPE,\r\n    unstable_Profiler: REACT_PROFILER_TYPE,\r\n\r\n    createElement: createElementWithValidation,\r\n    cloneElement: cloneElementWithValidation,\r\n    createFactory: createFactoryWithValidation,\r\n    isValidElement: isValidElement,\r\n\r\n    version: ReactVersion,\r\n\r\n    __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: ReactSharedInternals\r\n  };\r\n\r\n  if (enableSuspense) {\r\n    React.Placeholder = REACT_PLACEHOLDER_TYPE;\r\n    React.lazy = lazy;\r\n  }\r\n\r\n\r\n\r\n  var React$2 = Object.freeze({\r\n  \tdefault: React\r\n  });\r\n\r\n  var React$3 = ( React$2 && React ) || React$2;\r\n\r\n  // TODO: decide on the top-level export form.\r\n  // This is hacky but makes it work with both Rollup and Jest.\r\n  var react = React$3.default || React$3;\r\n\r\n  return skylark.react = react;\r\n\r\n});"]}